@using Microsoft.AspNetCore.Identity
@using TestApp2.Data.Models
@inject SignInManager<AppUserEntity> SignInManager
@inject UserManager<AppUserEntity> UserManager

@{
    var isSignedIn = SignInManager.IsSignedIn(User);

    var email = User?.Identity?.Name;
    var username = isSignedIn ? email?.Substring(0, email.IndexOf('@')) ?? "" : "";
}

<ul class="navbar-nav flex-grow-1">
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="" asp-page="/Index">Главная</a>
    </li>
    @if(isSignedIn)
    {
        
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-page="/Links" title="My links">Cсылки</a>
    </li>
        <li class="nav-item">
        <a  class="nav-link text-dark" asp-page="/Token" title="Tokens">API ключи</a>
    </li>
    }
</ul>

<ul class="navbar-nav">
@if (isSignedIn)
{
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Привет, @username!</a>
    </li>
    <li class="nav-item">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post" >
            <button  type="submit" class="nav-link btn btn-link text-dark">Выйти</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Зарегистрироваться</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Войти</a>
    </li>
}
</ul>
